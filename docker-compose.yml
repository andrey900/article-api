x-project-volume: &workDir
    ./:/var/www


x-project-tpl: &projectTpl
    build:
        args:
            user: "${APP_SYS_USER}"
            uid: "${APP_SYS_UID}"
        context: ./
        dockerfile: ./.docker/Dockerfile
    restart: unless-stopped
    env_file:
        - ./.docker/.env
    environment:
        PHP_IDE_CONFIG: "serverName=phpstorm.local"
        PRIMARY: "0"
    extra_hosts:
        - "host.docker.internal:host-gateway"
    depends_on:
        - db
    working_dir: /var/www/
    user: "${APP_SYS_USER}"
    volumes:
        - *workDir
        - ./.docker/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
        - /etc/localtime:/etc/localtime:ro



services:
    app:
        <<: *projectTpl
        volumes:
            - *workDir
            - ./.docker/first-run.sh:/scripts/docker-entrypoint.d/first-run.sh

    queue:
        <<: *projectTpl
        depends_on:
            - app
        command: php artisan queue:work

    cron:
        <<: *projectTpl
        depends_on:
            - app
        command: php artisan schedule:work

    nginx:
        image: nginx:alpine
        restart: unless-stopped
        depends_on:
            - app
        ports:
            - "${DOCKER_NGINX_PROXY_PORTS}:80"
        volumes:
            - ./:/var/www
            - ./.docker/nginx.d:/etc/nginx/conf.d/
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 10s

    db:
        image: postgres:17-alpine3.21
        restart: unless-stopped
        ports:
            - "${DOCKER_POSTGRES_PROXY_PORTS}:5432"
        volumes:
            - ".docker/postgresql_data:/var/lib/postgresql/data"
        environment:
            POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
            POSTGRES_USER: "${POSTGRES_USER}"
            POSTGRES_DB: "${POSTGRES_DB}"
            PGDATA: "/var/lib/postgresql/data/pgdata"
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
            interval: 3s
            timeout: 5s
            retries: 3
            start_period: 2s

    minio:
        image: minio/minio
        ports:
          - "${DOCKER_MINIO_PROXY_PORTS}:9000"
          - "9001:9001"
        volumes:
          - ./.docker/minio-data:/data
        environment:
            MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
            MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
            MINIO_DEFAULT_BUCKETS: "${MINIO_BUCKETS}"
        command: server /data --console-address :9001
        healthcheck:
            test: ["CMD", "curl", "-f", "http://127.0.0.1:9001/minio/health/live"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
